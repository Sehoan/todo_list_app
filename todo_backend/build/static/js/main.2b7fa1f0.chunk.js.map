{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/Heading.js","service/todoService.js","App.js","index.js"],"names":["TodoForm","values","handlers","onSubmit","addTodo","value","title","onChange","detail","rows","cols","type","TodoList","list","deleteHandler","completeHandler","detailStyle","fontSize","color","checkComplete","todo","finished","map","style","onClick","id","Heading","length","cnt","forEach","numCompleted","baseUrl","requests","getAll","axios","get","then","response","data","create","newTodo","post","erase","delete","complete","updatedTodo","put","App","useState","setList","newTitle","setTitle","newDetail","setDetail","useEffect","todoService","lists","event","target","preventDefault","addedTodo","concat","filter","search","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b7fa1f0.chunk.js","sourcesContent":["import React from 'react'\n\nconst TodoForm = ({ values, handlers }) => {\n    return (\n        <form onSubmit={handlers.addTodo}>\n            <div>\n                <div>\n                    ToDo title:\n                </div>\n                <input value={values.title} onChange={handlers.title}/>\n            </div>\n            <div>\n                <div>\n                    ToDo detail:\n                </div>\n                <textarea value={values.detail} onChange={handlers.detail} rows='5' cols='20'>\n                </textarea>\n            </div>\n            <button type='submit'> add </button>\n        </form>\n    )\n}\n\nexport default TodoForm\n","import React from 'react'\n\nconst TodoList = ({list, deleteHandler, completeHandler}) => {\n    const detailStyle =\n    {\n        fontSize: \"0.8rem\", color: \"grey\"\n    }\n    const checkComplete = todo => todo.finished ? {color: 'blue'} : {}\n\n    return (\n        <ul>\n            {list.map(todo => (\n                <li key={todo.title}>\n                    {todo.title}\n                    <button type=\"button\" style={checkComplete(todo)} onClick={completeHandler} id={todo.id}>\n                        completed\n                    </button>\n                    <button type=\"button\" onClick={deleteHandler} id={todo.id}>\n                        delete\n                    </button>\n                    <p style={detailStyle}>{todo.detail}</p>\n                </li>\n            )\n            )}\n        </ul>\n    )\n}\n\nexport default TodoList;\n\n","import React from 'react'\n\nconst Heading = ({ list }) => {\n\n    const numCompleted = (list) => {\n        let cnt = 0\n        list.forEach(todo => {\n            if(todo.finished) {\n                cnt++\n            }\n        })\n        return cnt\n    }\n\n    return (\n        <div>\n            <h1> My To-do List </h1>\n            <h3> Total To-do's: {list.length} </h3>\n            <h3> Completed To-do's: {numCompleted(list)} </h3>\n        </div>\n    )\n\n}\n\nexport default Heading\n","import axios from 'axios'\n\nconst baseUrl = '/todos'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newTodo => {\n    const request = axios.post(baseUrl, newTodo)\n    return request.then(response => response.data)\n}\nconst erase = id => {\n    return axios.delete(baseUrl+`/${id}`)\n}\nconst complete = (id, updatedTodo) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedTodo)\n    return request.then(response => response.data)\n}\n\nconst requests = { getAll, create, erase, complete }\n\nexport default requests\n","import React from 'react'\nimport {useState, useEffect} from 'react'\n\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\nimport Heading from './components/Heading'\nimport todoService from './service/todoService'\n\nconst App = () => {\n\n    const [list, setList] = useState([])\n    const [newTitle, setTitle] = useState('')\n    const [newDetail, setDetail] = useState('')\n\n    useEffect(() => {\n        todoService.getAll()\n            .then(lists => setList(lists))\n    }, [])\n\n    const addTodo = (event) => {\n        event.preventDefault();\n        const newTodo = {\n            title: newTitle,\n            detail: newDetail,\n            finished: false\n        }\n        todoService.create(newTodo)\n            .then(addedTodo => {\n                setList(list.concat(addedTodo))\n            })\n        setTitle('')\n        setDetail('')\n    }\n    const eraseTodo = (event) => {\n        const id = event.target.id\n        todoService.erase(id)\n            .then(response => {\n                setList(list.filter(todo => todo.id !== id))\n            })\n    }\n    const completeTodo = (event) => {\n        const id = event.target.id\n        event.target.style.color = 'blue'\n\n        const search = list.find(todo => todo.id === id)\n        const updatedTodo = {\n            title: search.title,\n            detail: search.detail,\n            finished: true\n        }\n        todoService.complete(id, updatedTodo)\n            .then(newTodo => {\n                setList(list.map(todo => todo.id === id ? newTodo : todo))\n            })\n    }\n\n    const titleHandler = (event) => {\n        setTitle(event.target.value)\n    }\n    const detailHandler = (event) => {\n        setDetail(event.target.value)\n    }\n\n    const values = {\n        title: newTitle,\n        detail: newDetail\n    }\n    const handlers = {\n        title: titleHandler,\n        detail: detailHandler,\n        addTodo: addTodo\n    }\n\n    return (\n        <div>\n            <Heading list={list} />\n            <TodoForm values={values} handlers={handlers} />\n            <TodoList list={list} deleteHandler={eraseTodo} completeHandler={completeTodo} />\n        </div>\n    )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}